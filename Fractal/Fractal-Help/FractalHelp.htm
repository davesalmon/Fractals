<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
	
	<head>
		<meta name=Title content="Fractal Help">
			<meta name=Keywords content="">
				
				<meta name="AppleTitle" content="Fractal Help" />
				<meta name="AppleIcon" content="Fractal.icns" />
				
				<meta http-equiv=Content-Type content="text/html; charset=utf-8">
					
					<link href="styles.css" rel="stylesheet" type="text/css" />
					
					<!-- script for toggling the sections on and off -->
					<script language="javascript" type="text/javascript">
						// this function toggles the display of chapter pages
						function toggleView(image,list)
						{
							var listElementStyle=document.getElementById(list).style;
							if (listElementStyle.display=="none")
							{
								listElementStyle.display="block";
								document.getElementById(image).src="images/down.gif";
							}
							else
							{
								listElementStyle.display="none";
								document.getElementById(image).src="images/up.gif";
							}
						}
					
					// used to start off with a page of only chapter headings
					function collapseAll()
					{
						var elems = document.getElementsByClassName("section");
						var len = elems.length;
						
						for (var i=0; i < len; i++)
						{
							var el = elems.item(i);
							
							if (el != null)
							el.style.display="none";
						}
						
						elems = document.getElementsByClassName("subsection");
						len = elems.length;
						
						for (var i=0; i < len; i++)
						{
							var el = elems.item(i);
							
							if (el != null)
							el.style.display="none";
						}
						
					}
					</script>
					
	</head>
	
	<body lang="EN-US">
		
		<div class="WordSection1">
			
			<p class="Plain" align="center" style='text-align:center'>
			<span>
				<img width="131" height="131" src="Fractal.icns"/>
			</span></p>
			
			<a onclick="toggleView('image0', 'warranty')">
				<h1 class="Warranty">
					<img id="image0" src="images/up.gif"/> License Agreement
				</h1>
			</a>
			
			<div class="section" id="warranty">
				
				<h2 class="Warranty">Fractal 1.0. License Agreement.</h2>
				
				<p class="Warranty">This program is free software; you can redistribute it and/or modify
				it under the terms of the GNU General Public License as published by
				the Free Software Foundation; either version 2 of the License, or
				(at your option) any later version.</p>
				
				<p class="Warranty">This program is distributed in the hope that it will be useful,
				but WITHOUT ANY WARRANTY; without even the implied warranty of
				MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
				GNU General Public License for more details.</p>
				
				<p class="Warranty">You should have received a copy of the GNU General Public License along
				with this program; if not, write to the Free Software Foundation, Inc.,
				51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
				</p>
				
			</div>
			
			<div style='border:none;border-bottom:solid #4F81BD 1.0pt;padding:0in 0in 4.0pt 0in'>
				
				<p class="Title">Fractal</p>
				
			</div>
			
			<!-- Section 1 -->
			
			<a onclick="toggleView('image1', 'section1')">
				<h1>
					<img id="image1" src="images/up.gif"/> Overview
				</h1>
			</a>
			
			<div class="section" id="section1">
				
				<p class="Plain">
				The Fractal application shows fractal images from the Mandelbrot or Julia sets.
				Each of these sets is generated by iterating on the formula</p>
				
				<p class="Equation">
				z<sub><small>i+1</small></sub> =
					z<sup><small>2</small></sup><sub><small>i</small></sub> - &lambda;
				</p>

				<p class="Plain">
				for different initial values of complex z =
				z<sub><small>x</small></sub> + i z<sub><small>y</small></sub> and complex
				&lambda; = &lambda;<sub><small>x</small></sub> + i
				&lambda;<sub><small>y</small></sub> until the new value for z exceed a given value
				or the maximum number of iterations is reached.
				</p>

			<!-- Sub-Section 1-1 -->
				
				<a onclick="toggleView('image1-1', 'section1-1')">
					<h2>
						<img id="image1-1" src="images/up.gif"/> Mandelbrot set.
					</h2>
				</a>
				
				<div class="subsection" id="section1-1">
					
					<p class="Plain">
					In the case of the Mandelbrot set, the location in the plane
					(x = &lambda;<sub><small>x</small></sub>, y = &lambda;<sub><small>y</small></sub>)
					are the values
					used for &lambda; = &lambda;<sub><small>x</small></sub> + i
					&lambda;<sub><small>y</small></sub> throughout the iteration. This is repeated for
					each point on the screen and a color is assigned to that point based on the
					number of iterations performed.
					</p>
					
					<p class="Plain">
					Different images can be achieved by varying the initial values of z =
					z<sub><small>x</small></sub> + i z<sub><small>y</small></sub>.
					</p>
					
				</div> <!-- end Sub-Section 1-1 -->
				
				<a onclick="toggleView('image1-2', 'section1-2')">
					<h2>
						<img id="image1-1" src="images/up.gif"/> Julia set.
					</h2>
				</a>
				
				<div class="subsection" id="section1-2">
					
					<p class="Plain">
					In the case of the Julia set, the location in the plane
					(x = &lambda;<sub><small>x</small></sub>, y = &lambda;<sub><small>y</small></sub>)
					are the initial values of z = z<sub><small>x</small></sub> + i z<sub><small>y</small></sub>
					used for the iteration. Again, each (x, y) location is used and a color is assigned
					to that point based on the number of iterations performed.
					</p>
					
					<p class="Plain">
					Different images can be achieved by varying the initial values of
					&lambda; = &lambda;<sub><small>x</small></sub> + i &lambda;<sub><small>y</small></sub>.
					</p>
				
				</div> <!-- end Sub-Section 1-2 -->
				
			</div> <!-- end Section 1 -->
			
			<!-- Section 2 -->
			
			<a onclick="toggleView('image2', 'section2')">
				<h1>
					<img id="image2" src="images/up.gif"/> Controls
				</h1>
			</a>
			
			<div class="section" id="section2">
				
				<a onclick="toggleView('image2-1', 'section2-1')">
					<h2>
						<img id="image2-1" src="images/up.gif"/> Maximum iterations.
					</h2>
				</a>
				
				<div class="subsection" id="section2-1">
					
					<p class="Plain">
					The maximum number of iterations is the number of iterations attempted for
					each point in the view. Increasing this number improves resolution but makes
					view generation slower.
					</p>
					
				</div> <!-- end Sub-Section 2-1 -->

				<a onclick="toggleView('image2-2', 'section2-2')">
					<h2>
						<img id="image2-2" src="images/up.gif"/> Radius.
					</h2>
				</a>

				<div class="subsection" id="section2-2">
					
					<p class="Plain">
					The radius is the distance from the origin when z is assumed to have diverged.
					In other words, when the distance of z from the origin exceeds the radius,
					diverge is assumed and the iteration count is returned.</p>
					
				</div> <!-- end Sub-Section 2-2 -->

				<a onclick="toggleView('image2-3', 'section2-3')">
					<h2>
						<img id="image2-3" src="images/up.gif"/> &lambda;(r).
					</h2>
				</a>

				<div class="subsection" id="section2-3">
					
					<p class="Plain">
					&lambda;(r) is the real (x) component of &lambda; for computing the Julia set.
					When Mandelbrot is selected, this value is the initial x component of z used in
					the iteration.</p>
					
				</div> <!-- end Sub-Section 2-3 -->

				<a onclick="toggleView('image2-4', 'section2-4')">
					<h2>
						<img id="image2-4" src="images/up.gif"/> &lambda;(i) .
					</h2>
				</a>

				<div class="subsection" id="section2-4">
					
					<p class="Plain">
					&lambda;(i) is the imaginary (y) component of &lambda; for computing the Julia set.
					When Mandelbrot is selected, this value is the initial y component of z used in
					the iteration.</p>
					
				</div> <!-- end Sub-Section 2-4 -->

				<a onclick="toggleView('image2-5', 'section2-5')">
					<h2>
						<img id="image2-5" src="images/up.gif"/> Viewport.
					</h2>
				</a>

				<div class="subsection" id="section2-6">
					
					<p class="Plain">
					The viewport can be adjusted to zoom in on any region by selecting that region
					with the mouse. The region of the view within the selected rectangle
					is expanded to fill the view when the mouse button is released.</p>
					
					<p class="Plain">
					If the shift key is depressed when the mouse button is released, the opposite effect
					occurs. The entire view is contracted to fit within the selected rectangle.</p>
					
					<p class="Plain">
					If the mouse button is pressed with the cursor inside the view without selecting
					any rectangle, the point so clicked is moved to the center of the view.</p>

				</div> <!-- end Sub-Section 2-5 -->

			</div> <!-- end Section 2 -->
			
		</div> <!-- WordSection1 -->
		
		<script language="javascript">
			collapseAll();
			</script>
		
	</body>
	
</html>
